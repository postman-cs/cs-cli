[package]
name = "cs-cli"
default-run = "cs-cli"
version = "1.0.0"
edition = "2021"
description = "CLI tool to analyze customer communications from Gong"
authors = ["Customer Success Team"]
license = "MIT"

[[bin]]
name = "cs-cli"
path = "src/main.rs"

[dependencies]
# HTTP client with TLS fingerprinting and browser compatibility
impit = { path = "vendor/impit/impit" }
reqwest = { version = "0.12", features = ["json", "cookies", "gzip", "http3", "blocking"] }

<<<<<<< HEAD
# Browser automation - CDP (Chrome DevTools Protocol)
tokio-tungstenite = { version = "0.21", features = ["native-tls"] }  # WebSocket client for CDP
regex = "1.10"                # Regex for version parsing
=======
# WebDriver and browser automation
fantoccini = { version = "0.22", default-features = false, features = ["native-tls"] }
zip = "0.6"                   # ZIP file extraction for driver downloads
regex = "1.10"                # Regex for version parsing
tar = "0.4"                   # TAR archive extraction for GeckoDriver
flate2 = "1.0"                # GZIP decompression for tar.gz files
>>>>>>> 30887b9 (github auth improvements)

# Async runtime - optimized features for our use case
tokio = { version = "1.0", features = [
    "rt-multi-thread",  # Multi-threaded runtime for concurrent API calls
    "net",              # TCP/HTTP networking for Gong API
    "time",             # Timeouts and delays for retry logic  
    "sync",             # Semaphores for rate limiting and concurrency control
    "macros",           # #[tokio::main] and #[tokio::test] macros
    "fs",               # File I/O for output generation and config
    "io-util",          # Async I/O utilities for HTTP streaming
] }

# CLI interface
clap = { version = "4.4", features = ["derive", "env", "wrap_help", "color", "suggestions"] }
clap_complete = "4.5"       # Shell completion (bash/zsh/fish/powershell)

# JSON handling
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"         # JSON serialization and macros
rusqlite = { version = "0.31", features = ["bundled"] }  # SQLite for browser profile access

# Date/time handling
jiff = { version = "0.2", features = ["serde"] }

# HTML processing
htmd = "0.2"               # HTML to markdown conversion

# Error handling
anyhow = "1.0"             # Generic error handling
async-trait = "0.1"        # Async traits for common interfaces

# Async utilities
futures = "0.3"            # Future utilities for concurrent operations
rand = "0.8"               # Random number generation for retry jitter

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "fmt"] }

# Terminal UI
console = "0.15"           # Basic terminal functionality
owo-colors = "4"           # Zero-allocation terminal colors and styling
inquire = "0.9.1"          # Interactive prompts with autocomplete
indicatif = "0.17"         # Progress bars and spinners
ratatui = "0.28"           # Rich terminal UI framework for custom widgets
crossterm = "0.28"         # Cross-platform terminal control

# Guided authentication with headless browser
# Browser automation
<<<<<<< HEAD
zstd = { version = "0.13", features = ["zstdmt"] }  # Compressed binary extraction
=======
cookie = "0.18"  # Cookie types for fantoccini (must match fantoccini's version)
zstd = { version = "0.13", features = ["zstdmt"] }  # Compressed driver extraction
>>>>>>> 30887b9 (github auth improvements)

# Configuration
figment = { version = "0.10", features = ["env", "json", "toml", "yaml"] }


# Base64 encoding/decoding
base64-simd = "0.8"

# URL encoding for query parameters
urlencoding = "2.1"
url = "2.5"                  # URL parsing and validation

# Directory handling
dirs = "5.0"                # Cross-platform directory paths
tempfile = "3.8"            # Temporary directories for browser profiles

# GitHub API client
octocrab = "0.39"           # GitHub API client

# Encryption for session data
aes-gcm = "0.10"             # Authenticated encryption (AES-256-GCM)
hkdf = "0.12"               # HKDF key derivation function  
zeroize = { version = "1.7", features = ["zeroize_derive"] } # Secure memory clearing
sha2 = "0.10"               # SHA-256 for key derivation
subtle = "2.5"              # Constant-time operations for secure comparisons

# Time handling for session metadata
chrono = { version = "0.4", features = ["serde"] }

# Error handling and testing
thiserror = "1.0"
mockall = "0.13"

[features]
default = []
slack = []                  # Slack integration feature flag

[dev-dependencies]
tokio-test = "0.4"
criterion = "0.5"           # Benchmarking
proptest = "1.6"            # Property-based testing
tempfile = "3.8"            # Temporary directories for test output
mockito = "1.2"             # HTTP mocking for API tests
wiremock = "0.6"            # Alternative HTTP mocking
serial_test = "3.0"         # Serialize tests that use shared resources
pretty_assertions = "1.4"   # Better test assertion diffs
tokio-stream = "0.1"        # Stream utilities for testing

# Fast development builds with reasonable performance
[profile.dev]
opt-level = 1          # Light optimization for faster builds
debug = true           # Keep debug symbols for debugging
incremental = true     # Enable incremental compilation (default)
codegen-units = 4      # Parallel code generation
overflow-checks = true # Keep safety checks in dev
panic = "unwind"       # Faster than abort for debugging

# Optimize dependencies for performance without slowing our code compilation
[profile.dev.package."*"]
opt-level = 3          # Full optimization for dependencies
debug = false          # Strip debug info from dependencies

# Fast test builds
[profile.test]
opt-level = 1
incremental = true
codegen-units = 4

# Production release builds with Apple Silicon optimizations
[profile.release]
opt-level = 3
lto = "fat"                # Full LTO for maximum optimization
codegen-units = 1          # Single unit for better optimization
panic = "abort"            # Smaller binary size
strip = true               # Remove symbols for smaller binary

# Apple Silicon M4 Max optimized release
[profile.release-fast]
inherits = "release"
lto = "thin"               # Faster LTO for iterative optimization
codegen-units = 4          # Balance between compile time and optimization

# Windows-specific dependencies
[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["winuser"] }

# macOS-specific dependencies for process detection
[target.'cfg(target_os = "macos")'.dependencies]
libc = "0.2"               # System calls for process detection

# Patched dependencies required for impit browser compatibility
[patch.crates-io]
rustls = { git = "https://github.com/apify/rustls.git" }
h2 = { git = "https://github.com/apify/h2.git" }

[build-dependencies]
dotenvy = "0.15"